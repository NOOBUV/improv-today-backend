"""create_simulation_tables

Revision ID: 20250916
Revises: 20250913
Create Date: 2025-09-15 02:36:07.595924

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '20250916'
down_revision: Union[str, None] = '20250913'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ava_global_state',
    sa.Column('state_id', sa.Integer(), nullable=False),
    sa.Column('trait_name', sa.String(length=50), nullable=False, comment="Trait identifier: 'stress', 'energy', 'mood', etc."),
    sa.Column('value', sa.String(length=100), nullable=False, comment='Current trait value (string or numeric as string)'),
    sa.Column('numeric_value', sa.Integer(), nullable=True, comment='Numeric representation for calculations (0-100 scale)'),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_event_id', sa.String(), nullable=True, comment='ID of the last event that modified this trait'),
    sa.Column('change_reason', sa.String(length=200), nullable=True, comment='Brief explanation of what caused the last change'),
    sa.Column('trend', sa.String(length=20), nullable=True, comment="Recent trend: 'increasing', 'decreasing', 'stable'"),
    sa.Column('min_value', sa.Integer(), nullable=True, comment='Minimum allowed value for this trait'),
    sa.Column('max_value', sa.Integer(), nullable=True, comment='Maximum allowed value for this trait'),
    sa.PrimaryKeyConstraint('state_id')
    )
    op.create_index(op.f('ix_ava_global_state_last_updated'), 'ava_global_state', ['last_updated'], unique=False)
    op.create_index(op.f('ix_ava_global_state_state_id'), 'ava_global_state', ['state_id'], unique=False)
    op.create_index(op.f('ix_ava_global_state_trait_name'), 'ava_global_state', ['trait_name'], unique=True)
    op.create_table('global_events',
    sa.Column('event_id', sa.String(), nullable=False),
    sa.Column('event_type', sa.String(length=20), nullable=False, comment="Event category: 'work', 'social', 'personal'"),
    sa.Column('summary', sa.Text(), nullable=False, comment='Brief description of the event'),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='When the event occurred'),
    sa.Column('status', sa.String(length=20), nullable=False, comment="Processing status: 'unprocessed', 'processed'"),
    sa.Column('intensity', sa.Integer(), nullable=True, comment='Event intensity level (1-10)'),
    sa.Column('impact_mood', sa.String(length=20), nullable=True, comment="Expected mood impact: 'positive', 'negative', 'neutral'"),
    sa.Column('impact_energy', sa.String(length=20), nullable=True, comment="Expected energy impact: 'increase', 'decrease', 'neutral'"),
    sa.Column('impact_stress', sa.String(length=20), nullable=True, comment="Expected stress impact: 'increase', 'decrease', 'neutral'"),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True, comment='When the event was processed by the consciousness engine'),
    sa.Column('created_by', sa.String(length=50), nullable=False, comment='System component that created this event'),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_index(op.f('ix_global_events_event_id'), 'global_events', ['event_id'], unique=False)
    op.create_index(op.f('ix_global_events_event_type'), 'global_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_global_events_status'), 'global_events', ['status'], unique=False)
    op.create_index(op.f('ix_global_events_timestamp'), 'global_events', ['timestamp'], unique=False)
    op.create_table('simulation_config',
    sa.Column('config_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=100), nullable=False, comment='Configuration key identifier'),
    sa.Column('value', sa.String(length=500), nullable=False, comment='Configuration value'),
    sa.Column('description', sa.Text(), nullable=True, comment='Human-readable description of this setting'),
    sa.Column('category', sa.String(length=50), nullable=False, comment="Configuration category: 'event_generation', 'timing', 'thresholds'"),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether this configuration is currently active'),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('config_id')
    )
    op.create_index(op.f('ix_simulation_config_category'), 'simulation_config', ['category'], unique=False)
    op.create_index(op.f('ix_simulation_config_config_id'), 'simulation_config', ['config_id'], unique=False)
    op.create_index(op.f('ix_simulation_config_is_active'), 'simulation_config', ['is_active'], unique=False)
    op.create_index(op.f('ix_simulation_config_key'), 'simulation_config', ['key'], unique=True)
    op.create_table('simulation_log',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('level', sa.String(length=10), nullable=False, comment="Log level: 'INFO', 'WARN', 'ERROR', 'DEBUG'"),
    sa.Column('component', sa.String(length=50), nullable=False, comment="System component: 'event_generator', 'state_manager', etc."),
    sa.Column('message', sa.Text(), nullable=False, comment='Log message content'),
    sa.Column('event_id', sa.String(), nullable=True, comment='Related event ID if applicable'),
    sa.Column('user_id', sa.String(), nullable=True, comment='Related user ID if applicable'),
    sa.Column('extra_data', sa.Text(), nullable=True, comment='Additional metadata as JSON string'),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index(op.f('ix_simulation_log_component'), 'simulation_log', ['component'], unique=False)
    op.create_index(op.f('ix_simulation_log_level'), 'simulation_log', ['level'], unique=False)
    op.create_index(op.f('ix_simulation_log_log_id'), 'simulation_log', ['log_id'], unique=False)
    op.create_index(op.f('ix_simulation_log_timestamp'), 'simulation_log', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_simulation_log_timestamp'), table_name='simulation_log')
    op.drop_index(op.f('ix_simulation_log_log_id'), table_name='simulation_log')
    op.drop_index(op.f('ix_simulation_log_level'), table_name='simulation_log')
    op.drop_index(op.f('ix_simulation_log_component'), table_name='simulation_log')
    op.drop_table('simulation_log')
    op.drop_index(op.f('ix_simulation_config_key'), table_name='simulation_config')
    op.drop_index(op.f('ix_simulation_config_is_active'), table_name='simulation_config')
    op.drop_index(op.f('ix_simulation_config_config_id'), table_name='simulation_config')
    op.drop_index(op.f('ix_simulation_config_category'), table_name='simulation_config')
    op.drop_table('simulation_config')
    op.drop_index(op.f('ix_global_events_timestamp'), table_name='global_events')
    op.drop_index(op.f('ix_global_events_status'), table_name='global_events')
    op.drop_index(op.f('ix_global_events_event_type'), table_name='global_events')
    op.drop_index(op.f('ix_global_events_event_id'), table_name='global_events')
    op.drop_table('global_events')
    op.drop_index(op.f('ix_ava_global_state_trait_name'), table_name='ava_global_state')
    op.drop_index(op.f('ix_ava_global_state_state_id'), table_name='ava_global_state')
    op.drop_index(op.f('ix_ava_global_state_last_updated'), table_name='ava_global_state')
    op.drop_table('ava_global_state')
    # ### end Alembic commands ###
