"""rename_ava_tables_to_clara_tables

Revision ID: 20250918
Revises: 20250917a
Create Date: 2025-09-24 01:54:33.382695

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '20250918'
down_revision: Union[str, None] = '20250917a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Copy data from old tables to new tables (new tables already exist)
    # Map columns explicitly due to different column ordering
    op.execute('''
        INSERT INTO clara_state (state_id, trait_name, value, numeric_value, trend, change_reason, last_event_id, min_value, max_value, last_updated, created_at)
        SELECT state_id, trait_name, value, numeric_value, trend, change_reason, last_event_id, min_value, max_value, last_updated, created_at
        FROM ava_state
    ''')
    op.execute('''
        INSERT INTO clara_global_state (state_id, trait_name, value, numeric_value, last_updated, last_event_id, change_reason, trend, min_value, max_value)
        SELECT state_id, trait_name, value, numeric_value, last_updated, last_event_id, change_reason, trend, min_value, max_value
        FROM ava_global_state
    ''')

    # Drop old tables after data migration
    op.drop_table('ava_state')
    op.drop_table('ava_global_state')
    op.alter_column('global_events', 'emotional_reaction',
               existing_type=sa.TEXT(),
               comment="Clara's emotional reaction to this event",
               existing_comment="Ava's emotional reaction to this event",
               existing_nullable=True)
    op.alter_column('global_events', 'chosen_action',
               existing_type=sa.TEXT(),
               comment='Action Clara chose in response to this event',
               existing_comment='Action Ava chose in response to this event',
               existing_nullable=True)
    op.alter_column('global_events', 'internal_thoughts',
               existing_type=sa.TEXT(),
               comment="Clara's internal thoughts about this event",
               existing_comment="Ava's internal thoughts about this event",
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('global_events', 'internal_thoughts',
               existing_type=sa.TEXT(),
               comment="Ava's internal thoughts about this event",
               existing_comment="Clara's internal thoughts about this event",
               existing_nullable=True)
    op.alter_column('global_events', 'chosen_action',
               existing_type=sa.TEXT(),
               comment='Action Ava chose in response to this event',
               existing_comment='Action Clara chose in response to this event',
               existing_nullable=True)
    op.alter_column('global_events', 'emotional_reaction',
               existing_type=sa.TEXT(),
               comment="Ava's emotional reaction to this event",
               existing_comment="Clara's emotional reaction to this event",
               existing_nullable=True)
    # Recreate old tables and copy data back
    op.create_table('ava_global_state',
    sa.Column('state_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('trait_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment="Trait identifier: 'stress', 'energy', 'mood', etc."),
    sa.Column('value', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='Current trait value (string or numeric as string)'),
    sa.Column('numeric_value', sa.INTEGER(), autoincrement=False, nullable=True, comment='Numeric representation for calculations (0-100 scale)'),
    sa.Column('last_updated', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('last_event_id', sa.VARCHAR(), autoincrement=False, nullable=True, comment='ID of the last event that modified this trait'),
    sa.Column('change_reason', sa.VARCHAR(length=200), autoincrement=False, nullable=True, comment='Brief explanation of what caused the last change'),
    sa.Column('trend', sa.VARCHAR(length=20), autoincrement=False, nullable=True, comment="Recent trend: 'increasing', 'decreasing', 'stable'"),
    sa.Column('min_value', sa.INTEGER(), autoincrement=False, nullable=True, comment='Minimum allowed value for this trait'),
    sa.Column('max_value', sa.INTEGER(), autoincrement=False, nullable=True, comment='Maximum allowed value for this trait'),
    sa.PrimaryKeyConstraint('state_id', name='ava_global_state_pkey')
    )
    op.create_index('ix_ava_global_state_trait_name', 'ava_global_state', ['trait_name'], unique=True)
    op.create_index('ix_ava_global_state_state_id', 'ava_global_state', ['state_id'], unique=False)
    op.create_index('ix_ava_global_state_last_updated', 'ava_global_state', ['last_updated'], unique=False)

    op.create_table('ava_state',
    sa.Column('state_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('trait_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_updated', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('numeric_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('trend', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('change_reason', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_event_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('min_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('max_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('state_id', name='ava_state_pkey')
    )
    op.create_index('ix_ava_state_trait_name', 'ava_state', ['trait_name'], unique=True)
    op.create_index('ix_ava_state_state_id', 'ava_state', ['state_id'], unique=False)

    # Copy data back to old tables
    op.execute('INSERT INTO ava_state SELECT * FROM clara_state')
    op.execute('INSERT INTO ava_global_state SELECT * FROM clara_global_state')

    # Drop new tables
    op.drop_table('clara_state')
    op.drop_table('clara_global_state')
    # ### end Alembic commands ###
