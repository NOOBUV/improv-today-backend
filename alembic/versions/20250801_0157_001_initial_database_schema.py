"""Initial database schema

Revision ID: 001
Revises: 
Create Date: 2025-08-01 01:57:05.758161

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_anonymous', sa.Boolean(), nullable=True),
    sa.Column('vocabulary_tier', sa.String(), nullable=True),
    sa.Column('assessment_completed', sa.Boolean(), nullable=True),
    sa.Column('interests', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_type', sa.String(), nullable=True),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('vocabulary_used_count', sa.Integer(), nullable=True),
    sa.Column('fluency_score', sa.Float(), nullable=True),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('analysis_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessions_id'), 'sessions', ['id'], unique=False)
    op.create_table('vocabulary_assessments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('vocabulary_tier', sa.String(), nullable=False),
    sa.Column('complexity_score', sa.Float(), nullable=True),
    sa.Column('strengths', sa.JSON(), nullable=True),
    sa.Column('gaps', sa.JSON(), nullable=True),
    sa.Column('interests', sa.JSON(), nullable=True),
    sa.Column('sample_topics', sa.JSON(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('unique_words_used', sa.Integer(), nullable=True),
    sa.Column('assessment_duration', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vocabulary_assessments_id'), 'vocabulary_assessments', ['id'], unique=False)
    op.create_table('vocabulary_recommendations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('word', sa.String(), nullable=False),
    sa.Column('definition', sa.Text(), nullable=True),
    sa.Column('context_example', sa.Text(), nullable=True),
    sa.Column('difficulty_level', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('priority_score', sa.Float(), nullable=True),
    sa.Column('based_on_interests', sa.Boolean(), nullable=True),
    sa.Column('based_on_gaps', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('times_encountered', sa.Integer(), nullable=True),
    sa.Column('times_used_correctly', sa.Integer(), nullable=True),
    sa.Column('last_practiced', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vocabulary_recommendations_id'), 'vocabulary_recommendations', ['id'], unique=False)
    op.create_index(op.f('ix_vocabulary_recommendations_word'), 'vocabulary_recommendations', ['word'], unique=False)
    op.create_table('session_transcripts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('original_text', sa.Text(), nullable=True),
    sa.Column('cleaned_text', sa.Text(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('corrections_made', sa.JSON(), nullable=True),
    sa.Column('detected_vocabulary_level', sa.String(), nullable=True),
    sa.Column('word_complexity_score', sa.Float(), nullable=True),
    sa.Column('grammar_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_session_transcripts_id'), 'session_transcripts', ['id'], unique=False)
    op.create_table('vocabulary_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('word', sa.String(), nullable=False),
    sa.Column('used_correctly', sa.Boolean(), nullable=False),
    sa.Column('context_sentence', sa.Text(), nullable=True),
    sa.Column('usage_score', sa.Float(), nullable=True),
    sa.Column('appropriateness_score', sa.Float(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('suggested_improvement', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vocabulary_usage_id'), 'vocabulary_usage', ['id'], unique=False)
    op.create_index(op.f('ix_vocabulary_usage_word'), 'vocabulary_usage', ['word'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vocabulary_usage_word'), table_name='vocabulary_usage')
    op.drop_index(op.f('ix_vocabulary_usage_id'), table_name='vocabulary_usage')
    op.drop_table('vocabulary_usage')
    op.drop_index(op.f('ix_session_transcripts_id'), table_name='session_transcripts')
    op.drop_table('session_transcripts')
    op.drop_index(op.f('ix_vocabulary_recommendations_word'), table_name='vocabulary_recommendations')
    op.drop_index(op.f('ix_vocabulary_recommendations_id'), table_name='vocabulary_recommendations')
    op.drop_table('vocabulary_recommendations')
    op.drop_index(op.f('ix_vocabulary_assessments_id'), table_name='vocabulary_assessments')
    op.drop_table('vocabulary_assessments')
    op.drop_index(op.f('ix_sessions_id'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
