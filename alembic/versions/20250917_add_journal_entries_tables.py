"""Add journal entries tables

Revision ID: 20250917a
Revises: 20250917
Create Date: 2025-09-17 01:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '20250917a'
down_revision: Union[str, None] = '20250917'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create journal_entries table
    op.create_table('journal_entries',
        sa.Column('entry_id', sa.String(), nullable=False, comment='Unique identifier for the journal entry'),
        sa.Column('entry_date', sa.Date(), nullable=False, comment='Date this journal entry is for (one per day)'),
        sa.Column('content', sa.Text(), nullable=False, comment='The journal entry content (Fleabag-inspired narrative)'),
        sa.Column('status', sa.String(length=20), nullable=False, comment='Entry status: \'draft\', \'approved\', \'posted\''),
        sa.Column('events_processed', sa.Integer(), nullable=True, comment='Number of GlobalEvents processed for this entry'),
        sa.Column('emotional_theme', sa.String(length=50), nullable=True, comment='Dominant emotional theme: \'positive\', \'negative\', \'neutral\', \'mixed\''),
        sa.Column('generated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='When this entry was generated'),
        sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True, comment='When this entry was reviewed by admin'),
        sa.Column('reviewed_by', sa.String(length=100), nullable=True, comment='Admin user who reviewed this entry'),
        sa.Column('published_at', sa.DateTime(timezone=True), nullable=True, comment='When this entry was published to social media'),
        sa.Column('character_count', sa.Integer(), nullable=True, comment='Character count for social media optimization'),
        sa.Column('readability_score', sa.String(length=10), nullable=True, comment='Text readability score for quality assessment'),
        sa.Column('admin_notes', sa.Text(), nullable=True, comment='Admin notes about this entry (editing suggestions, etc.)'),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='Last modification timestamp'),
        sa.Column('metadata_json', sa.JSON(), nullable=True, comment='Additional metadata (source events, generation params, etc.)'),
        sa.PrimaryKeyConstraint('entry_id')
    )
    op.create_index(op.f('ix_journal_entries_created_at'), 'journal_entries', ['created_at'], unique=False)
    op.create_index(op.f('ix_journal_entries_entry_date'), 'journal_entries', ['entry_date'], unique=True)
    op.create_index(op.f('ix_journal_entries_entry_id'), 'journal_entries', ['entry_id'], unique=False)
    op.create_index(op.f('ix_journal_entries_generated_at'), 'journal_entries', ['generated_at'], unique=False)
    op.create_index(op.f('ix_journal_entries_status'), 'journal_entries', ['status'], unique=False)

    # Create journal_generation_log table
    op.create_table('journal_generation_log',
        sa.Column('log_id', sa.Integer(), nullable=False),
        sa.Column('target_date', sa.Date(), nullable=False, comment='Date the journal generation was attempted for'),
        sa.Column('status', sa.String(length=20), nullable=False, comment='Generation status: \'success\', \'failure\', \'no_events\', \'skipped\''),
        sa.Column('events_found', sa.Integer(), nullable=False, comment='Number of events found for the target date'),
        sa.Column('events_processed', sa.Integer(), nullable=False, comment='Number of events actually processed'),
        sa.Column('generation_duration_ms', sa.Integer(), nullable=True, comment='Time taken for generation in milliseconds'),
        sa.Column('llm_model_used', sa.String(length=50), nullable=True, comment='LLM model used for generation'),
        sa.Column('error_message', sa.Text(), nullable=True, comment='Error message if generation failed'),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('emotional_context', sa.JSON(), nullable=True, comment='Emotional state and context at time of generation'),
        sa.Column('celery_task_id', sa.String(length=100), nullable=True, comment='Celery task ID for this generation attempt'),
        sa.Column('triggered_by', sa.String(length=50), nullable=False, comment='What triggered this generation: \'scheduled\', \'manual\', \'api\''),
        sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index(op.f('ix_journal_generation_log_created_at'), 'journal_generation_log', ['created_at'], unique=False)
    op.create_index(op.f('ix_journal_generation_log_log_id'), 'journal_generation_log', ['log_id'], unique=False)
    op.create_index(op.f('ix_journal_generation_log_status'), 'journal_generation_log', ['status'], unique=False)
    op.create_index(op.f('ix_journal_generation_log_target_date'), 'journal_generation_log', ['target_date'], unique=False)

    # Create journal_templates table
    op.create_table('journal_templates',
        sa.Column('template_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False, comment='Template name for identification'),
        sa.Column('emotional_theme', sa.String(length=50), nullable=False, comment='Target emotional theme: \'positive\', \'negative\', \'neutral\', \'chaotic\''),
        sa.Column('template_content', sa.Text(), nullable=False, comment='Template text with placeholders for dynamic content'),
        sa.Column('usage_count', sa.Integer(), nullable=False, comment='Number of times this template has been used'),
        sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether this template is currently active'),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('last_used', sa.DateTime(timezone=True), nullable=True, comment='When this template was last used'),
        sa.Column('avg_engagement_score', sa.String(length=10), nullable=True, comment='Average engagement score when this template is used'),
        sa.Column('notes', sa.Text(), nullable=True, comment='Notes about when and how to use this template'),
        sa.PrimaryKeyConstraint('template_id'),
        sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_journal_templates_emotional_theme'), 'journal_templates', ['emotional_theme'], unique=False)
    op.create_index(op.f('ix_journal_templates_is_active'), 'journal_templates', ['is_active'], unique=False)
    op.create_index(op.f('ix_journal_templates_template_id'), 'journal_templates', ['template_id'], unique=False)

    # Set default values
    op.execute("ALTER TABLE journal_entries ALTER COLUMN status SET DEFAULT 'draft'")
    op.execute("ALTER TABLE journal_templates ALTER COLUMN usage_count SET DEFAULT 0")
    op.execute("ALTER TABLE journal_templates ALTER COLUMN is_active SET DEFAULT true")
    op.execute("ALTER TABLE journal_generation_log ALTER COLUMN events_found SET DEFAULT 0")
    op.execute("ALTER TABLE journal_generation_log ALTER COLUMN events_processed SET DEFAULT 0")
    op.execute("ALTER TABLE journal_generation_log ALTER COLUMN triggered_by SET DEFAULT 'scheduled'")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_journal_templates_template_id'), table_name='journal_templates')
    op.drop_index(op.f('ix_journal_templates_is_active'), table_name='journal_templates')
    op.drop_index(op.f('ix_journal_templates_emotional_theme'), table_name='journal_templates')
    op.drop_table('journal_templates')

    op.drop_index(op.f('ix_journal_generation_log_target_date'), table_name='journal_generation_log')
    op.drop_index(op.f('ix_journal_generation_log_status'), table_name='journal_generation_log')
    op.drop_index(op.f('ix_journal_generation_log_log_id'), table_name='journal_generation_log')
    op.drop_index(op.f('ix_journal_generation_log_created_at'), table_name='journal_generation_log')
    op.drop_table('journal_generation_log')

    op.drop_index(op.f('ix_journal_entries_status'), table_name='journal_entries')
    op.drop_index(op.f('ix_journal_entries_generated_at'), table_name='journal_entries')
    op.drop_index(op.f('ix_journal_entries_entry_id'), table_name='journal_entries')
    op.drop_index(op.f('ix_journal_entries_entry_date'), table_name='journal_entries')
    op.drop_index(op.f('ix_journal_entries_created_at'), table_name='journal_entries')
    op.drop_table('journal_entries')
    # ### end Alembic commands ###